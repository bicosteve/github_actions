name: Deploy Website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache dependancies # must be done before the files are produced
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
      - name: Install Dependancies
        run: npm ci
      - name: Lint Code
        run: npm run lint
      - name: Test Code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    # outputs
    outputs:
      script-file:
        ${{ steps.publish.outputs.script-file }}
        # you will use this to access output value
        # use steps defined by github
        # id from steps defined by user
        # outputs defined by github
        # script-file from publish job defined by user

    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache dependancies # must be done before the files are produced
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json')}}
      - name: Install Dependancies
        run: npm ci
      - name: Build Website
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assest/*.js -type f -execdir echo '::set-output name=script-file::{}' ';'
      - name: Store/Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files # name is upto you
          path: |
            dist 
            package.json
          # just example for multiple files
          # | is multiline
          # these files will be part of artifacts and can be downloaded
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files # ensure you download the right artifacts and unzip it and be available in this job
      - name: Output contents
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
        # passing data between jobs
      - name: Deploy App
        run: echo "Deploying app ..."
