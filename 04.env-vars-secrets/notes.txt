** Environment Variables **
- certain values are dynamic in the code
- eg db connection password
- values for environment variables can be set in github 
- values can also be provided on .yml file at workflow level
- workflow level env will be available for all the jobs in the workflow
- eg 
env: 
  MONGO_DB_NAME: gha-demo 
- you can also set environment variable at job level 
jobs:
  test:
    env:
      MONGO_DB_CLUSTER: 'something something' 
      MONGO_USERNAME: bix 
      MONGO_PASSWORD: example@123
- env values on job level are only accessible to the specific job 

** Secrets ** 
- some values should not be exposed 
- github allows you to store secrets such that no one can see them 
- secrets can be stored in various levels 
 1. organization secrets 
 2. repository secrets
 3. Environment secrets 

These are placed on secrets > actions 
- these can be repository secret, 
NB: once stored, the values can only be updated but not viewed!
    cannot also be printed on the workflow.  

can be accessed by github actions expression syntax using secret context 
env: 
  MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}


*** Environment Secrets *** 
- workflows jobs can target environments secrets 
- you can add special protection rules. 
- add environments secrets on settings > environment 
- from there you can add environment specific secrets 
- to use the environment secrets, use environment not env on the job 
- eg 
jobs:
  test:
    environment: testing
      env: MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
NB: you can add rules to the environment on who, time, and which branch can trigger the use of variables and secrets in this specific environment. 

      




2. Encrypting environment variables 
steps: 
    - go to repo settings 
    - click on secrets 
    - click on 'Add secrets' 
    - add name, add value 
    - click 'add' button 

It will be available on object called secrets 
On the environment add 
  env:
   NAME: ${{secrets.SECRET_NAME}}

NB: GITHUB_TOKEN is available without being stored in the secrets

NB: Github only allows upto a certain secret size therefore you need to come up with a way to store your secret on a file.
- You can use json file, encrypt it then decrypt it on githhub.
- Use GPG to encrypt the file then decrypt them in github.

COMMAND TO ENCRYPT A FILE 
gpg --symmetric --cipher-algo AES256 <file_name>
- You will need a passphrase which will also be used to decrypt your file 
- Should be sent with to your repo and be decript in one of your jobs 



EXPRESSION CONTEXT
- this is an expression ${{secrets.PASSPHRASE}}
- expression can have numbers, string, booleans, floats, operators (<>), even functions 
- github provide these functions and result can be passed to some key in yaml file.
- the objects {{}} are called contexts they can be secret context, github context etc, 

FUNCTIONS ON WORKFLOWS
- toJson()
- there other many functions
- endsWith()
- startsWith()
- contains()
- format()

JOB STATUS FUNCTIONS 
- returns information about your job 
- can have a key `if`
